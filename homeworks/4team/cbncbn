#二进制逆向

[TOC]






###1.常用指令
**MOV指令**

指令写法：MOV target，source 
功能描述：将源操作数source的值复制到target中去，source值不变 
-  mov eax,ebx			;ebx内容送入ebx

**xchg指令**

指令写法：XCHG object1，object2 
功能描述：交换object1与object2的值 
- xchg - ebx,ecx，表示ebx与ecx的数值被交换

**递增（减）指令**
 
- inc reg(8,16,32)
- dec reg(8,16,32)

**add指令**
- add reg32,reg32/imm(8,16,32)
- add reg16,reg16/imm(8,16)
- add reg8,reg8/imm(8)
减法**SUB**语法同add

**lea指令**
- lea ax,buf	;将存储器buf所指的地址传送给ax

**rep、stos指令**

REP指令的作用是重复上面的指令，ECX的值是重复次数。 STOS指令是将EAX中的值拷贝到一个目的地址中。
- lea edi,[ebp-0C0h]    //将局部变量的堆栈中开始地址值保存到edi寄存器
- mov ecx,30h  //将重复执行指令的次数放到ecx
- mov eax,0CCCCCCCCh  //初始化 eax
- rep stos dword ptr es:[edi] //用eax的值初始化到es:[edi]指向的地址，长度为dword,执行次数为ecx中的值


 **cmp指令**
 
 cmp（compare）指令比较两个操作数的大小，进行的运算是第一个操作数减去第二个操作数，但结果不会影响两个操作数的值，只会影响flag的CF、ZF、OF、AF、PF。 对各个flag的影响如下：
 若执行指令后
ZF=1 这个简单，则说明两个数相等，因为zero为1说明结果为0
当无符号时：
若
CF=1 则说明了有进位或借位，cmp是进行的减操作，故可以看出为借位，所以，此时oprd1<oprd2
CF=0 则说明了无借位，但此时要注意ZF是否为0，若为0，则说明结果不为0，故此时oprd1>oprd2
当有符号时：
若SF=0，OF=0 则说明了此时的值为正数，没有溢出，可以直观的看出，oprd1>oprd2
若SF=1，OF=0 则说明了此时的值为负数，没有溢出，则为oprd1<oprd2
若SF=0，OF=1 则说明了此时的值为正数，有溢出，可以看出oprd1<oprd2
若SF=1，OF=1则说明了此时的值为负数，有溢出，可以看出oprd1>oprd2
最后两个可以作出这种判断的原因是，溢出的本质问题：
两数同为正，相加，值为负，则说明溢出
两数同为负，相加，值为正，则说明溢出
故有，正正得负则溢出，负负得正则溢出

**跳转指令**

跳转指令分三类：

无条件跳转：JMP
根据CX、ECX寄存器的值跳转：JCXZ（CX为0则跳转）、JECXZ（ECX为0则跳转）
根据EFLAGS寄存器的标志位跳转，列表如下：
  JE   ;等于则跳转
	JNE  ;不等于则跳转

JZ   ;为 0 则跳转
JNZ  ;不为 0 则跳转

JS   ;为负则跳转
JNS  ;不为负则跳转

JC   ;进位则跳转
	JNC  ;不进位则跳转
Jo   ;溢出则跳转
JNO  ;不溢出则跳转

JA   ;无符号大于则跳转
	JNA  ;无符号不大于则跳转
	JAE  ;无符号大于等于则跳转
	JNAE ;无符号不大于等于则跳转

JG   ;有符号大于则跳转
	JNG  ;有符号不大于则跳转
	JGE  ;有符号大于等于则跳转
	JNGE ;有符号不大于等于则跳转

JB   ;无符号小于则跳转
	JNB  ;无符号不小于则跳转
	JBE  ;无符号小于等于则跳转
	JNBE ;无符号不小于等于则跳转

JL   ;有符号小于则跳转
	JNL  ;有符号不小于则跳转
	JLE  ;有符号小于等于则跳转
	JNLE ;有符号不小于等于则跳转

JP   ;奇偶位置位则跳转
	JNP  ;奇偶位清除则跳转
	JPE  ;奇偶位相等则跳转
	JPO  ;奇偶位不等则跳转
###2.作业
把寄存器全部设置成0的状态，然后执行下面的代码：
mov eax,0a1234h			;将十六进制数0a1234h送入eax
mov bx,ax			;将ax内容送入bx
mov ah,bl			;将bl内容送入ah
mov al,bh			;将bh内容送入al
思考此时EAX的内容是多少?
1.eax:1010 0001 0010 0011 0100
ax=0001 0010 0011 0100
2.bx=ax=0001 0010 0011 0100
3.ah=bl=0011 0100
4.al=bh=0001 0010 
则eax=1010 0011 0100 0001 0010,即0a3412h
